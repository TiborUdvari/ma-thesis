% Software
\specialsection{Software}{}{black}{white}

% Contributions are more like how
% Cathedral and the bazaar is more like how
% Open source motivations are more like why

\begin{figure}
	\centering
	\includegraphics[width=0.9\textwidth]{images/processing-mini-cd.png}
	\caption{Mini CDs for sponsors at the Media Lab Open House october 2002}
	\label{fig:processing-cd}
\end{figure}
\subsection{Release early, release often}
The maxim "Release early, release often," attributed to Eric S. Raymond in his seminal text "The Cathedral and the Bazaar" \parencite{raymondCathedralBazaar1999}, is often touted as a catalyst for vibrant open-source communities. In particular, projects like Linux have benefited from this approach, allowing rapid integration of contributions from a distributed network of contributors. This not only boosts the morale of individual contributors but also creates a dynamic and responsive development environment.

However, the Processing project presents a departure from this pattern. The time-between-releases data, presented in the table below, reveals periods of intense activity interlaced with long intervals of inactivity, complicating a straightforward mapping onto the “Release early, release often” model.

\changepapersize{305.3mm:210mm}
\customtag{largepage}

{
	\LARGE
	\noindent Frequency of Releases\par
	\vspace{0.2cm} 
}

\begin{multicols}{3}
	\noindent
	\begin{minipage}{\columnwidth + \columnsep}
		\begin{tabular}{|r|l|}
			\hline
			Descriptive statistics & Time between releases \\
			\hline
			count                  & 60                    \\
			mean                   & 20 days 15:11         \\
			std                    & 47 days 00:10         \\
			min                    & 0 days 00:00          \\
			25\%                   & 1 days 00:00          \\
			50\%                   & 3 days 00:00          \\
			75\%                   & 26 days 18:00         \\
			max                    & 338 days 00:00        \\
			\hline
		\end{tabular}
		\captionof{table}{Release statistics}
	\end{minipage}
	\columnbreak 
	\noindent
	\begin{minipage}{\columnwidth}
		\frame{\includegraphics[width=\linewidth]{images/time_between_releases_histogram.png}}
		% \includegraphics[width=\linewidth]{graph2}
		\captionof{figure}{Graph that spans one column}
	\end{minipage}
\end{multicols}

\begin{figure}[h!]
	\centering
	\frame{\includegraphics[width=1\textwidth]{images/releases-lines.png}}
	\caption{Time between releases}
	\label{fig:releases-lines}
\end{figure}

% \begin{figure}[h!] 
%   \centering
%   \includegraphics[width=0.9\textwidth]{images/time_between_releases_histogram.png} 
%   \caption{Time between releases histogram}
%   \label{fig:releases_frequency_histogram}
% \end{figure}

\begin{multicols}{3}
	\noindent
	The graphical representations depict a distinctive pattern of release clustering, a testament to the sporadic and intermittent nature of the project's development lifecycle. A notable surge can be observed leading up to pivotal milestones, such as the alpha forum's initial release, indicating a focused burst of activity during these critical junctures.
	\noindent
	The distribution of releases further accentuates the project's non-linear progress, with a marked increase in releases as key points approach, followed by periods of relative inactivity. This ebb and flow suggest that the development process is influenced by external factors or revolves around specific events, leading to a "feast or famine" scenario in terms of updates and improvements.
	\noindent
	Moreover, the extended intervals devoid of any releases could imply that the project advancement is perhaps a secondary or parallel endeavor for the contributors.
\end{multicols}

\defaultareasettings

What makes Processing a particularly interesting case is that, contrary to what one might expect from Raymond's model, most contributions appear to be made by a centralized figure—Ben Fry, the project's main architect—rather than a broad community of external contributors. This effectively shifts the project's development model closer to a cathedral-like structure for core components, as reflected by Ben's direct control over major releases.

Moreover, the project’s side-project nature is confirmed by revision comments such as one from 05/01/2003, which reads: "hopefully January 2003 will be a good month for p5, as I have a short bit of time to work on it [...] I hope to get a few revisions out this month so I can get back to my 'real' work." These comments illuminate that, for core contributors, Processing is not necessarily viewed as a full-time commitment.

The perception of Processing as a side project rather than a full-time commitment for its core contributors is corroborated through multiple channels. For example, a revision comment from May 1, 2003, highlights this sentiment, stating, ``hopefully January 2003 will be a good month for p5, as I have a short bit of time to work on it [...] I hope to get a few revisions out this month so I can get back to my `real' work.'' This observation is further substantiated by a 2021 study titled ``Graphic design in the post-digital age: a survey of practices fueled by creative coding,'' which notes that Processing began as a personal initiative and was largely developed during nights and weekends. The study further reveals that the project received indirect funding from MIT through Fry's graduate stipend, and from Interaction Design Institute Ivrea (IDII) through Reas's salary, again indicating its ancillary nature in the professional lives of its principal contributors~\parencite[396]{conradGraphicDesignPostdigital2021}.

It is worth noting that the logistics of releasing software were more complex in the early 2000s than they are today. As can be seen in Figure~\ref{fig:processing-cd} of a mini CD from October 2002 illustrates, distributing software was not as straightforward as pushing updates to a Git repository.



% Trends in git commits
The \textit{Processing} project illuminates a crucial challenge often faced by open source communities: the dependency on key contributors. In the case of Processing, Ben Fry's central role over the past two decades raises concerns about the project's resilience and sustainability. His substantial contributions create a high-risk situation termed the "bus factor" \parencite{BusFactor2023}, which indicates how vulnerable a project becomes when overly reliant on a single or a small number of contributors. This vulnerability is not unique to Processing, as such dependency models are commonly observed across open source projects, often humorously discussed in popular culture \parencite{munroeDependency2020}.

The imbalanced contribution landscape is vividly illustrated in Figure~\ref{fig:alpha-commits}. During the period of the alpha forum, only six individuals contributed code to the repository. This stands in stark contrast to the activity on the forum, where over 1000 individuals were engaged in discussions and queries. The commits themselves were also sporadic and infrequent. As Casey aptly points out: ``I think one thing that’s important to clarify is that Ben Fry, my collaborator, is the primary software engineer of the project [...]'' \parencite[p. 330]{conradGraphicDesignPostdigital2021}.

This discrepancy between the number of code contributors and forum participants is indeed profound, as corroborated by the subsequent visualizations ~\ref{fig:top12-github} and comic anecdotes ~\ref{fig:dependency_comic}. The limited number of contributors to the codebase and the concentrated responsibility on a few individuals amplify the bus factor risk, an issue that warrants deeper investigation and consideration for the long-term health of the project.

\changepapersize{305.3mm:210mm}
\customtag{largepage}

{
	\LARGE
	\noindent Version control statistics 
}
\begin{multicols}{3}
	\begin{minipage}{\columnwidth}
	\begin{figure}[H] 
    \centering 
    \includesvg[pretex=\sffamily\fontsize{5.58pt}{8pt}\selectfont, width=1\textwidth, keepaspectratio]{images/figure-top12-github.svg}
    \caption{Top 12 source code contributors by number of commits}
    \label{fig:top12-github}  
  \end{figure}	
	\end{minipage}
	\begin{minipage}{\columnwidth}
	\begin{figure}[H] 
    \centering
    \includegraphics[width=0.5\textwidth]{dependency.png} 
    \caption{Dependency}
    \label{fig:dependency_comic}
    \small Source: \textit{XKCD}, \url{https://xkcd.com/2347/}, licensed under CC BY-NC 2.5.
\end{figure}	
	\end{minipage}
\end{multicols}
\begin{figure}[h!]
	\centering
	\includesvg[pretex=\sffamily\fontsize{5.58pt}{8pt}\selectfont, width=1\textwidth, keepaspectratio]{images/processing-alpha-commits.svg}
	\caption{Commits up to and including the Processing alpha forum}
	\label{fig:alpha-commits}
\end{figure}


\defaultareasettings

The commit logs within the Processing project's GitHub repository, while rich with data, do not provide a complete visualization of early contributions. In an interview with Ben Fry, it was elucidated that contributions from various lab members, including those from Simon Greenwold, were indeed substantial in the project's formative years. These contributions, although crucial, are not conspicuously traceable through the GitHub interface. Fry explains that due to the constraints of the version control systems like CVS and Subversion used at the time, he personally committed code from other contributors, ensuring their efforts were acknowledged in the commit logs, even if not directly attributed in the repository's graphical interface.

Moreover, Fry sheds light on the complex interplay between the Processing project and MIT's evolving stance towards open source software. He recounts the early difficulties: "We also had a long delay before we could release the code publicly, because we got stuck in a period when MIT, and the Media Lab in particular, were figuring out its relationship to open source code. The TLO was suddenly taking an interest in all these things that were simply being given away as ‘open source,’ so it took us a couple years to get actual clearance for it." This statement points to the broader challenges faced by academic institutions in reconciling their intellectual property policies with the principles of the open source movement, a context that is vital for understanding the trajectory of Processing's development and distribution.

\subsection{A cathedral or a bazaar}

While existing literature often focuses on the role of companies in contributing to open-source projects through complementary services like consulting, our study diverges by focusing on individual contributors. In the context of the Processing community, corporate involvement is notably lesser when compared to platforms like Linux that have substantial corporate contributions.

The 2016 Processing community survey revealed a significant number of users employ the language for educational purposes. This is consistent with Processing's design ethos, which is aimed at being educationally accessible. However, the extent to which this educational usage intersects with what can be termed as `professional use' remains unclear.

For the purpose of this study, `professional use' is understood to primarily include artists and designers. This nuanced categorization helps in probing the overlap between professional and educational use within the Processing community.

Building upon established frameworks such as the taxonomy by Bonaccorsi et al.~\cite{bonaccorsiComparingMotivationsIndividual2006}, which categorizes motivations behind open-source contributions into Economic, Social, and Technological domains, our study intends to adapt this taxonomy to suit the specific nuances of the Processing community.

\begin{figure}[h!]
	\centering
	\includegraphics[width=\textwidth]{images/community-survey.png}
	\caption{Processing 2016 community survey result \parencite{2016CommunitySurvey}}
	\label{fig:community_survey}
\end{figure}

\input{includes/table-motivations.tex}

% todo NN cette taxonomie est intéressante, mais il faudrait la commenter dans le corps de texte en 2.2, qu’elle vienne nourrir ce que tu as mis au-dessus comme texte, là tu la pose rapidement sans trop détailler comment elle a été produite et ce qu’elle nous dit

%\subsection{The intersection of Creative Coding and Open Source}
%\subsection{Relevant Methodological Approaches in Computer Science and Anthropology}

Open source software has evolved from a grassroots, community-driven activity into a mainstream phenomenon influencing all sectors of software development. This transition has been analyzed from numerous perspectives, including Etienne Wenger's theory of Communities of Practice, which posits that learning occurs in social contexts \parencite{wengerCommunitiesPracticeLearning1998}. This theory underscores the importance of shared experiences, tools, and discourse in shaping a community's collective practice. In the context of open-source software, these dynamics offer invaluable insights into the sustainability and progression of such projects. For instance, the Processing community exemplifies more than just a collection of individual contributors; it represents a dynamic community molded by common goals and collective learning.

This communal focus contrasts sharply with the software development models described in Eric S. Raymond's seminal work "The Cathedral and the Bazaar" \parencite{CathedralBazaarMusings2002a}. The Cathedral model is marked by careful planning and centralized authority, more akin to the early GNU projects initiated by Richard Stallman in the 1980s. Conversely, the Bazaar model encourages open collaboration and decentralization—features commonly associated with contemporary open source projects. These two models can be conceptualized as endpoints of a continuum, with real-world communities of practice, like the Processing community, potentially embodying characteristics of both.

Although Richard Stallman's Free Software Movement initially utilized a Cathedral-like approach, the evolution of version control systems like Git has facilitated the adoption of more decentralized, Bazaar-like models. This technological and philosophical shift intriguingly complements Wenger's notions of "mutual engagement," "joint enterprise," and "shared repertoire"—elements that nurture a sense of community and shared objectives \parencite{wengerCommunitiesPracticeLearning1998}.

Fast-forwarding to today, the landscape now includes not just individual contributors but major corporations as well, injecting both challenges and opportunities into existing communities. The Processing project stands as a compelling case study to examine how an open-source community can preserve its foundational ethos while simultaneously adapting to contemporary requirements.

To holistically grasp the intricate interplay of social and technical factors contributing to the success of open-source initiatives, a multidimensional analysis is essential. Such an approach would synthesize various frameworks, including Wenger's Communities of Practice \parencite{wengerCommunitiesPracticeLearning1998} and Raymond's Cathedral and Bazaar models \parencite{CathedralBazaarMusings2002a}, aiming to provide a nuanced understanding of a community's past, present dynamics, and future potential.

\subsection{An ecosytem of libraries}
\todo[inline]{Add Casey Reas quote}
An important milestone in the Processing ecosystem was the introduction of libraries. These libraries extended the functionalities of the base platform, thereby attracting a broader range of users and contributors. Such an analysis not only sheds light on the diversification of the project but also identifies key contributors and library authors who could potentially be sought out for qualitative interviews. The identification of these contributors adds another layer to our understanding of community participation.

Libraries have always been a crucial component of the Processing community, serving as essential building blocks that extend the platform's capabilities and foster creative exploration. Contributors to these libraries, like Ricard Marxer, Andreas Schlegel, and Karsten Schmidt, are not just developers; they are innovators who play a pivotal role in shaping the Processing ecosystem. Their motivations for contributing provide insightful perspectives into the diverse factors that inspire individuals to engage in open-source projects.

Ricard Marxer, the mind behind the 'geomerative' library, was driven by a blend of personal interest, community engagement, and the thrill of technological innovation. His enthusiasm for programming is evident in his creation of the geomerative library, which addressed specific needs in geometry processing within Processing. Marxer's comment, "I made generative for that, like it was the generative library for geometry," reflects his personal investment in solving technical challenges. Furthermore, his involvement in the community was not solely about personal achievement but also about being part of a larger group, as he fondly recalls the social aspects, "I really enjoyed going a lot to Madrid...and I get to meet all the people from the community of processing."

Andreas Schlegel, who created ControlP5, shows a different set of motivations. While not focusing on economic benefits, the social aspect of his work, particularly recognition within the community, was significant for him. Schlegel mentions, "I do get recognized for writing these libraries and for, by those who are familiar with the community and have used processing before." His contributions, initially experimental, reflected an altruistic intent to provide something useful to the community. Schlegel's journey from learning to contributing, "In the beginning, learning more through reading, and then after a while, I would then also help out and respond to questions that were coming in," highlights the importance of community interaction in driving motivation.

Karsten Schmidt's contributions to toxiclibs were deeply rooted in technological curiosity and a penchant for experimentation. His focus on software side projects and the technical aspects of programming are evident. Schmidt's involvement in early Processing development and creation of toxiclibs suggests a keen interest in working with new technologies. He demonstrated a broader interest in software development challenges, going beyond Processing to work with other languages and tools, as indicated in his discussions about various technical aspects.

The concept of "scratching a personal itch" emerges as a notable motivator for these contributors. They developed their libraries while addressing specific, personal needs or challenges, a common driver in many open-source projects. Marxer's development of the geomerative library, Schlegel's creation of ControlP5, and Schmidt's work on toxiclibs hint at this motivation, where the initial impetus to contribute often stemmed from their own experiences and requirements.

In summary, the motivations of library contributors in the Processing community are as diverse as their backgrounds. From Marxer's enjoyment of coding and community involvement to Schlegel's recognition within the community and Schmidt's technological curiosity, these motivations underscore the multifaceted nature of open-source contribution. Here, personal passions, community dynamics, and the thrill of technological innovation converge, highlighting the unique blend of personal, social, and technological factors that drive individuals to contribute to open-source projects like Processing.

\changepapersize{305.3mm:210mm}
\customtag{largepage}

{
	\LARGE
	\noindent Libraries releases
}

\begin{figure}[H]
	\includesvg[pretex=\sffamily\fontsize{5.58pt}{8pt}\selectfont, width=1\textwidth, keepaspectratio]{images/figure-libraries.svg}
	\caption{Distribution of Libraries in the Processing Project}
	\label{figure:libraries}
\end{figure}

\begin{multicols}{3}
	\todo[inline]{Shorten this explanation, or move some parts elsewhere}
	\noindent
	This graph illustrates the distribution of Processing library releases over a period from January 2012 to April 2014. Each dot on the graph signifies a release event for a library in various categories such as 3D, Animation, and GUI. The process of releasing these libraries was manual, requiring approval on the Processing website before they became available for update. This artisanal method meant that only the latest versions of the libraries were accessible, without an option to retrieve previous iterations.
	\noindent
	The data for this graph was meticulously reconstructed using a 'git blame' operation on the data folder containing links to these libraries. It's worth noting that this data may not fully represent the entirety of the Processing library space. The reconstruction is based on a single version of the website's data, lacking a comprehensive historical record that could have been obtained from multiple website versions. Thus, while the graph provides valuable insights into the release patterns and activity within the Processing community, it comes with the caveat of being an incomplete representation due to the availability of only one snapshot of the website data.
\noindent	
	In the context of the Processing community, this graph serves as a historical lens, capturing the cadence of library updates and highlighting the active categories of development. Despite the limitations in data scope, it reflects a significant portion of the community's contributions and the evolution of library offerings during the specified timeframe.	
\end{multicols}
\defaultareasettings
